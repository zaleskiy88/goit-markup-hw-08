@function decimal-round($number, $digits: 0, $mode: round) {
  $n: 1;
  // $number must be a number
  @if type-of($number) != number {
    @warn '#{ $number } is not a number.';
    @return $number;
  }
  // $digits must be a unitless number
  @if type-of($digits) != number {
    @warn '#{ $digits } is not a number.';
    @return $number;
  } @else if not unitless($digits) {
    @warn '#{ $digits } has a unit.';
    @return $number;
  }
  @if $digits > 0 {
    @for $i from 1 through $digits {
      $n: $n * 10;
    }
  }
  @if $mode == round {
    @return round($number * $n) / $n;
  } @else if $mode == ceil {
    @return ceil($number * $n) / $n;
  } @else if $mode == floor {
    @return floor($number * $n) / $n;
  } @else {
    @warn '#{ $mode } is undefined keyword.';
    @return $number;
  }
}
//@include
@mixin title($fontSize, $lineHeight, $fontWeight, $letterSpc: 0.03em) {
  font-size: $fontSize;
  line-height: decimal-round($lineHeight/$fontSize, 2);
  font-weight: $fontWeight;
  letter-spacing: $letterSpc;
}

@mixin textDescription($fontSize, $lineHeight, $color, $letterSpc: 0.03em) {
  font-size: $fontSize;
  line-height: decimal-round($lineHeight/$fontSize, 2);
  color: $color;
  letter-spacing: $letterSpc;
}
